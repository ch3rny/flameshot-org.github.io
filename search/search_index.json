{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Flameshot 0.8.5 \u00b6 Powerful yet simple to use screenshot software. Features \u00b6 Customizable appearance. Easy to use. In-app screenshot edition. DBus interface. Upload to Imgur. Considerations \u00b6 Experimentally Gnome Wayland and Plasma Wayland support. If you are using Gnome you need to install the TopIcons extension in order to see the systemtray icon. In order to speed up the first launch of Flameshot (DBus init of the app can be slow), consider starting the application automatically on boot. Press Enter or Ctrl + C when you are in a capture mode and you don't have an active selection and the whole desktop will be copied to your clipboard! Pressing Ctrl + S will save your capture in a file! Check the Shortcuts for more information. Execute the command flameshot without parameters or use the \"Launch Flameshot\" desktop entry to launch a running instance of the program without taking actions. License \u00b6 The main code is licensed under GPLv3 The logo of Flameshot is licensed under Free Art License v1.3 The button icons are licensed under Apache License 2.0. See: https://github.com/google/material-design-icons The code at capture/capturewidget.cpp is based on https://github.com/ckaiser/Lightscreen/blob/master/dialogs/areadialog.cpp (GPLv2) The code at capture/capturewidget.h is based on https://github.com/ckaiser/Lightscreen/blob/master/dialogs/areadialog.h (GPLv2) Copied a few lines of code from KSnapshot regiongrabber.cpp revision 796531 (LGPL) Qt-Color-Widgets taken and modified from https://github.com/mbasaglia/Qt-Color-Widgets (see their license and exceptions in the project) (LGPL/GPL) Info: If I take code from your project and that implies a relicense to GPLv3, you can reuse my changes with the original previous license of your project applied.","title":"Overview"},{"location":"#flameshot-085","text":"Powerful yet simple to use screenshot software.","title":"Flameshot 0.8.5"},{"location":"#features","text":"Customizable appearance. Easy to use. In-app screenshot edition. DBus interface. Upload to Imgur.","title":"Features"},{"location":"#considerations","text":"Experimentally Gnome Wayland and Plasma Wayland support. If you are using Gnome you need to install the TopIcons extension in order to see the systemtray icon. In order to speed up the first launch of Flameshot (DBus init of the app can be slow), consider starting the application automatically on boot. Press Enter or Ctrl + C when you are in a capture mode and you don't have an active selection and the whole desktop will be copied to your clipboard! Pressing Ctrl + S will save your capture in a file! Check the Shortcuts for more information. Execute the command flameshot without parameters or use the \"Launch Flameshot\" desktop entry to launch a running instance of the program without taking actions.","title":"Considerations"},{"location":"#license","text":"The main code is licensed under GPLv3 The logo of Flameshot is licensed under Free Art License v1.3 The button icons are licensed under Apache License 2.0. See: https://github.com/google/material-design-icons The code at capture/capturewidget.cpp is based on https://github.com/ckaiser/Lightscreen/blob/master/dialogs/areadialog.cpp (GPLv2) The code at capture/capturewidget.h is based on https://github.com/ckaiser/Lightscreen/blob/master/dialogs/areadialog.h (GPLv2) Copied a few lines of code from KSnapshot regiongrabber.cpp revision 796531 (LGPL) Qt-Color-Widgets taken and modified from https://github.com/mbasaglia/Qt-Color-Widgets (see their license and exceptions in the project) (LGPL/GPL) Info: If I take code from your project and that implies a relicense to GPLv3, you can reuse my changes with the original previous license of your project applied.","title":"License"},{"location":"changelog/","text":"v0.8.5 \u00b6 2020.10.14 Fixes \u00b6 Fixed Icon Regression Staged documentation for signed windows binaries Adjusted releasing info for flatpak, snapcraft, rpm, deb Snaps are now available on snapcraft so not posted here: https://snapcraft.io/flameshot Flatpak is hosted on flathub so not posted here: https://flathub.org/apps/details/org.flameshot.Flameshot Current Windows Binaries are not signed but once they are available it will be uploaded here. v0.8.4 \u00b6 2020.10.10 Fixes \u00b6 Renamed assets to match DBUS name for flathub support Fixed issue where theme was not applied to widgets Fixed issue where pixelate tool did not properly apply pixel size and was not symmetric horizontally and vertically Fixed visual artifact in pin to desktop in appimage release Fixed issue where CTRL + S did not save active text in text tool Imgur tool now opens in the center of the screen Translation Updates Brazilian Portuguese German Korean Basque v0.8.3 \u00b6 2020.09.28 Fixes \u00b6 Fixed Snap Packaging Small bug fixes v0.8.1 \u00b6 2020.09.24 Fixes \u00b6 Fixed ubuntu 18.04 packaging Auto contrast on circle counter v0.8.0 \u00b6 2020.09.19 Features: \u00b6 Add translation: Japanese Brazilian Portuguese Serbian Dutch Ukrainian German Slovak Basque Czech Swedish Italian Korean Dutch Allow enter key to copy image to clipboard side panel: Add thickness slider Add support for saving as JPG and BMP files. Allow 45 degree adjustment for some tools Add option to close after capture (WARNING: this function is buggy! It may not work well if you are going to copy the image to clipboard! If you encounter problems related to clipboard, please disable this feature in the configuration and try again.) Add a basic launcher panel. Add option to auto copy URL after upload Add a circle counter tool. Replace the blur tool with pixelate tool. Convert buildsystem from QMake to CMake. Add launcher action into .desktop file. Added Generic Packages (Snap, Flatpak, AppImage) Improved Windows support Fixes \u00b6 Fix capture after pressing ctrl + S during textarea input Known Issues \u00b6 Wayland support is experimental. In generic packages (Snap, Flatpak, AppImage) there may be extra issues with Wayland. In generic packages(Snap, Flatpak, AppImage) due to confinement \"Open With External Application\" does not work. If \"close after capture\" is enabled, and a user copies the image to clipboard, the image may not actually be in the clipboard. We recommend using the \"Save\" feature with close after capture. v0.6.0 \u00b6 2018.08.17 Features: \u00b6 Allow systray customization with themes. Use \"flameshot-tray\" as the name of the icon. Unification of the desktop file with actions. Notification when screenshots are saved in the clipboard. Use datetime as default name for pics. Undo/Redo with Ctrl+z and Ctrl+Shift+z. Add \"Take Screenshot\" option as menu item in the systray. Add Side-Panel (open it with Space). Add autostart to config flags. Add Pin tool. Filename: replace colons with dashes. Add Text tool. Delete Imgur image button after uploading it from the preview window. Capture single screen: flameshot screen (capture the screen containing the mouse) and flameshot screen -n 1 (capture the first screen). Store settings colors in hexadecimal format. Fixes \u00b6 flameshot full -c shouldn't block the desktop. Now you can overwrite exported configuration with the same name as a previous exports. Fix flameshot --raw wait time with delay. Fix negative selection geometry bug. Improved hidpi support with some bugs fixed. v0.5.1 \u00b6 2018.02.24 Features: \u00b6 Polish, French, Georgian, Chinese, Turkish and Rusian translations Modal widgets doesn't prevent the start of a new capture Improved hidpi support (still needs some work) Tool buttons now don't go out of the screen Use of native file dialog Configurable opacity of the dark area outside the selection Autostart app as a configuration option Fixes \u00b6 Minor fixes v0.5.0 \u00b6 2017.12.20 Features \u00b6 Catalan translation. Debian package configuration. Add --raw flag: prints the raw bytes of the png after the capture. Bash completion. Blur tool. Preview draw size on mouse pointer after tool selection. App Launcher tool: choose an app to open the capture. Travis integration Configuration import, export and reset. Experimental Wayland support (Plasma & Gnome) Accessibility \u00b6 Capture selection resizable using any border. Fixes \u00b6 App version shown properly Now the cli wont break if you preppend a dash before gui, full and config arguments. Fix rare crash condition creating a selection during a graphical capture. v0.4.2 \u00b6 2017.09.17 Hotfix: \u00b6 persistent configuration wasn't handled correctly for new users, failing to set a \"initiated\" status flag in the configuration. That is used to let the program know if a new process of Flameshot is the first launch of the program. v0.4.1 \u00b6 2017.08.29 Features \u00b6 Slightly darker capture background (Cross cursor more visible in Plasma) Flameshot compiles with QT 5.3 (Debian 8, Linux Mint, etc) v0.4.0 \u00b6 2017.08.17 Features \u00b6 The buttons hide when you have selected the whole screen and you try to draw behind them. Add informative labels in the filename editor. A better CLI parser with a more effective (and informative) syntax error handling. new CLI argument 'config' to manage some configurations from terminal. More uniform button's hovering color. Automatic horizontal adjustment in Marker and Line tools. Enhanced menus with expandable layouts. Add graphical option to disable the trayicon. Now you can check the version of Flameshot! Shrink the selection area when pushing against the borders of the screen. Now you can change the thickness of the drawing tools using the mouse wheel! Some more little changes. Fixes \u00b6 Fix button's emerge animation while hovering. Fix freeze problem with save dialog and clipboard copy at the same time. Minor Fixes Extras \u00b6 More code cleanup! (still more to do) v0.3.0 \u00b6 2017.07.25 Features \u00b6 Add Desktop entry to init flameshot without commands. New configuration menu design. Define custom names for your captures! Improved error notifications when saving captures. Fixes \u00b6 Multiple monitor support. Makefile flag for custom installs (packaging) Non blocking error notifications. Add error notifications for Imgur uploads. Minor Fixes Extras \u00b6 Huge general code refactor. Dbus API refactor. v0.2.1 \u00b6 2017.07.04 Fixes \u00b6 Fix inability to change active buttons in non english translated versions of the software due to a wrong identification of the type of the buttons. v0.2.0 \u00b6 2017.06.20 Features \u00b6 Better selection of buttons for colour edition. Independence of full screen captures not affecting the graphical captures. Desktop entry for a more convenient desktop integration. v0.1.0 \u00b6 2017.06.19 Features \u00b6 First public release.","title":"Changelog"},{"location":"changelog/#v085","text":"2020.10.14","title":"v0.8.5"},{"location":"changelog/#fixes","text":"Fixed Icon Regression Staged documentation for signed windows binaries Adjusted releasing info for flatpak, snapcraft, rpm, deb Snaps are now available on snapcraft so not posted here: https://snapcraft.io/flameshot Flatpak is hosted on flathub so not posted here: https://flathub.org/apps/details/org.flameshot.Flameshot Current Windows Binaries are not signed but once they are available it will be uploaded here.","title":"Fixes"},{"location":"changelog/#v084","text":"2020.10.10","title":"v0.8.4"},{"location":"changelog/#fixes_1","text":"Renamed assets to match DBUS name for flathub support Fixed issue where theme was not applied to widgets Fixed issue where pixelate tool did not properly apply pixel size and was not symmetric horizontally and vertically Fixed visual artifact in pin to desktop in appimage release Fixed issue where CTRL + S did not save active text in text tool Imgur tool now opens in the center of the screen Translation Updates Brazilian Portuguese German Korean Basque","title":"Fixes"},{"location":"changelog/#v083","text":"2020.09.28","title":"v0.8.3"},{"location":"changelog/#fixes_2","text":"Fixed Snap Packaging Small bug fixes","title":"Fixes"},{"location":"changelog/#v081","text":"2020.09.24","title":"v0.8.1"},{"location":"changelog/#fixes_3","text":"Fixed ubuntu 18.04 packaging Auto contrast on circle counter","title":"Fixes"},{"location":"changelog/#v080","text":"2020.09.19","title":"v0.8.0"},{"location":"changelog/#features","text":"Add translation: Japanese Brazilian Portuguese Serbian Dutch Ukrainian German Slovak Basque Czech Swedish Italian Korean Dutch Allow enter key to copy image to clipboard side panel: Add thickness slider Add support for saving as JPG and BMP files. Allow 45 degree adjustment for some tools Add option to close after capture (WARNING: this function is buggy! It may not work well if you are going to copy the image to clipboard! If you encounter problems related to clipboard, please disable this feature in the configuration and try again.) Add a basic launcher panel. Add option to auto copy URL after upload Add a circle counter tool. Replace the blur tool with pixelate tool. Convert buildsystem from QMake to CMake. Add launcher action into .desktop file. Added Generic Packages (Snap, Flatpak, AppImage) Improved Windows support","title":"Features:"},{"location":"changelog/#fixes_4","text":"Fix capture after pressing ctrl + S during textarea input","title":"Fixes"},{"location":"changelog/#known-issues","text":"Wayland support is experimental. In generic packages (Snap, Flatpak, AppImage) there may be extra issues with Wayland. In generic packages(Snap, Flatpak, AppImage) due to confinement \"Open With External Application\" does not work. If \"close after capture\" is enabled, and a user copies the image to clipboard, the image may not actually be in the clipboard. We recommend using the \"Save\" feature with close after capture.","title":"Known Issues"},{"location":"changelog/#v060","text":"2018.08.17","title":"v0.6.0"},{"location":"changelog/#features_1","text":"Allow systray customization with themes. Use \"flameshot-tray\" as the name of the icon. Unification of the desktop file with actions. Notification when screenshots are saved in the clipboard. Use datetime as default name for pics. Undo/Redo with Ctrl+z and Ctrl+Shift+z. Add \"Take Screenshot\" option as menu item in the systray. Add Side-Panel (open it with Space). Add autostart to config flags. Add Pin tool. Filename: replace colons with dashes. Add Text tool. Delete Imgur image button after uploading it from the preview window. Capture single screen: flameshot screen (capture the screen containing the mouse) and flameshot screen -n 1 (capture the first screen). Store settings colors in hexadecimal format.","title":"Features:"},{"location":"changelog/#fixes_5","text":"flameshot full -c shouldn't block the desktop. Now you can overwrite exported configuration with the same name as a previous exports. Fix flameshot --raw wait time with delay. Fix negative selection geometry bug. Improved hidpi support with some bugs fixed.","title":"Fixes"},{"location":"changelog/#v051","text":"2018.02.24","title":"v0.5.1"},{"location":"changelog/#features_2","text":"Polish, French, Georgian, Chinese, Turkish and Rusian translations Modal widgets doesn't prevent the start of a new capture Improved hidpi support (still needs some work) Tool buttons now don't go out of the screen Use of native file dialog Configurable opacity of the dark area outside the selection Autostart app as a configuration option","title":"Features:"},{"location":"changelog/#fixes_6","text":"Minor fixes","title":"Fixes"},{"location":"changelog/#v050","text":"2017.12.20","title":"v0.5.0"},{"location":"changelog/#features_3","text":"Catalan translation. Debian package configuration. Add --raw flag: prints the raw bytes of the png after the capture. Bash completion. Blur tool. Preview draw size on mouse pointer after tool selection. App Launcher tool: choose an app to open the capture. Travis integration Configuration import, export and reset. Experimental Wayland support (Plasma & Gnome)","title":"Features"},{"location":"changelog/#accessibility","text":"Capture selection resizable using any border.","title":"Accessibility"},{"location":"changelog/#fixes_7","text":"App version shown properly Now the cli wont break if you preppend a dash before gui, full and config arguments. Fix rare crash condition creating a selection during a graphical capture.","title":"Fixes"},{"location":"changelog/#v042","text":"2017.09.17","title":"v0.4.2"},{"location":"changelog/#hotfix","text":"persistent configuration wasn't handled correctly for new users, failing to set a \"initiated\" status flag in the configuration. That is used to let the program know if a new process of Flameshot is the first launch of the program.","title":"Hotfix:"},{"location":"changelog/#v041","text":"2017.08.29","title":"v0.4.1"},{"location":"changelog/#features_4","text":"Slightly darker capture background (Cross cursor more visible in Plasma) Flameshot compiles with QT 5.3 (Debian 8, Linux Mint, etc)","title":"Features"},{"location":"changelog/#v040","text":"2017.08.17","title":"v0.4.0"},{"location":"changelog/#features_5","text":"The buttons hide when you have selected the whole screen and you try to draw behind them. Add informative labels in the filename editor. A better CLI parser with a more effective (and informative) syntax error handling. new CLI argument 'config' to manage some configurations from terminal. More uniform button's hovering color. Automatic horizontal adjustment in Marker and Line tools. Enhanced menus with expandable layouts. Add graphical option to disable the trayicon. Now you can check the version of Flameshot! Shrink the selection area when pushing against the borders of the screen. Now you can change the thickness of the drawing tools using the mouse wheel! Some more little changes.","title":"Features"},{"location":"changelog/#fixes_8","text":"Fix button's emerge animation while hovering. Fix freeze problem with save dialog and clipboard copy at the same time. Minor Fixes","title":"Fixes"},{"location":"changelog/#extras","text":"More code cleanup! (still more to do)","title":"Extras"},{"location":"changelog/#v030","text":"2017.07.25","title":"v0.3.0"},{"location":"changelog/#features_6","text":"Add Desktop entry to init flameshot without commands. New configuration menu design. Define custom names for your captures! Improved error notifications when saving captures.","title":"Features"},{"location":"changelog/#fixes_9","text":"Multiple monitor support. Makefile flag for custom installs (packaging) Non blocking error notifications. Add error notifications for Imgur uploads. Minor Fixes","title":"Fixes"},{"location":"changelog/#extras_1","text":"Huge general code refactor. Dbus API refactor.","title":"Extras"},{"location":"changelog/#v021","text":"2017.07.04","title":"v0.2.1"},{"location":"changelog/#fixes_10","text":"Fix inability to change active buttons in non english translated versions of the software due to a wrong identification of the type of the buttons.","title":"Fixes"},{"location":"changelog/#v020","text":"2017.06.20","title":"v0.2.0"},{"location":"changelog/#features_7","text":"Better selection of buttons for colour edition. Independence of full screen captures not affecting the graphical captures. Desktop entry for a more convenient desktop integration.","title":"Features"},{"location":"changelog/#v010","text":"2017.06.19","title":"v0.1.0"},{"location":"changelog/#features_8","text":"First public release.","title":"Features"},{"location":"command-line-options/","text":"Usage \u00b6 Example commands: - capture with GUI: flameshot gui capture with GUI with custom save path: flameshot gui -p ~/myStuff/captures open GUI with a delay of 2 seconds: flameshot gui -d 2000 fullscreen capture (asking savepath): flameshot full fullscreen capture with custom save path (no GUI) and delayed: flameshot full -p ~/myStuff/captures -d 5000 fullscreen capture with custom save path copying to clipboard: flameshot full -c -p ~/myStuff/captures In case of doubt choose the first or the second command as shortcut in your favorite desktop environment. A systray icon will be in your system's panel while Flameshot is running. Do a right click on the tray icon and you'll see some menu items to open the configuration window and the information window. Check out the information window to see all the available shortcuts in the graphical capture mode. CLI configuration \u00b6 You can use the graphical menu to configure Flameshot, but alternatively you can use your terminal or scripts to do so. open the configuration menu: flameshot config show the initial help message in the capture mode: flameshot config --showhelp true for more information about the available options use the help flag: flameshot config -h","title":"Command Line Options"},{"location":"command-line-options/#usage","text":"Example commands: - capture with GUI: flameshot gui capture with GUI with custom save path: flameshot gui -p ~/myStuff/captures open GUI with a delay of 2 seconds: flameshot gui -d 2000 fullscreen capture (asking savepath): flameshot full fullscreen capture with custom save path (no GUI) and delayed: flameshot full -p ~/myStuff/captures -d 5000 fullscreen capture with custom save path copying to clipboard: flameshot full -c -p ~/myStuff/captures In case of doubt choose the first or the second command as shortcut in your favorite desktop environment. A systray icon will be in your system's panel while Flameshot is running. Do a right click on the tray icon and you'll see some menu items to open the configuration window and the information window. Check out the information window to see all the available shortcuts in the graphical capture mode.","title":"Usage"},{"location":"command-line-options/#cli-configuration","text":"You can use the graphical menu to configure Flameshot, but alternatively you can use your terminal or scripts to do so. open the configuration menu: flameshot config show the initial help message in the capture mode: flameshot config --showhelp true for more information about the available options use the help flag: flameshot config -h","title":"CLI configuration"},{"location":"configuration/","text":"GUI mode \u00b6 Right-click the system tray icon and select Configuration. CLI mode \u00b6 Check the cli-configuration for more information.","title":"Configuration"},{"location":"configuration/#gui-mode","text":"Right-click the system tray icon and select Configuration.","title":"GUI mode"},{"location":"configuration/#cli-mode","text":"Check the cli-configuration for more information.","title":"CLI mode"},{"location":"download/","text":"Linux \u00b6 Hosted on Github 64-bit Windows \u00b6 Hosted on Github 64-bit 32-bit","title":"Download"},{"location":"download/#linux","text":"Hosted on Github 64-bit","title":"Linux"},{"location":"download/#windows","text":"Hosted on Github 64-bit 32-bit","title":"Windows"},{"location":"faq/","text":"In System tray area, flameshot appears duplicate icons/indicator See #92 .","title":"FAQ"},{"location":"getting-started/","text":"Installation \u00b6 There are packages available for a few distros: - Arch + Snapshot also available via AUR: flameshot-git . - Debian 10+ : apt install flameshot - Ubuntu 18.04+ : apt install flameshot - Fedora: dnf install flameshot - openSUSE - Void Linux : xbps-install flameshot - Docker - Solus : eopkg install flameshot In addition, we also have continuous integration, it currently provides the following package: - Debian8 (jessie) - Debian9 (stretch) - Ubuntu16.04 (xenial) - Ubuntu17.10 (artful) - Fedora26 - Fedora27 General packages(AppImage, snap, and Flatpak): they can run on common Linux-based operating systems, such as RHEL, CentOS, openSUSE, SLED, Ubuntu, Fedora, debian and derivatives. AppImage You can always use the AppImage as it is distro agnostic: Naviaget to the folder you would like to store the software (the following is a suggestion): mkdir -p ~/Applications/Flameshot cd ~/Applications/Flameshot Delete older versions of Flameshot AppImage: rm Flameshot-*-x86_64.AppImage Download the latest AppImage 2.1. Get it from Release page OR 2.2. use the following to automatically download the latest. sh curl -O -J -L $(curl -s https://api.github.com/repos/flameshot-org/flameshot/releases/latest \\ | grep -Po 'https://github.com/flameshot-org/flameshot/releases/download/[^}]*\\.AppImage' \\ | uniq) Set it to executable: chmod +x Flameshot-*-x86_64.AppImage Now you have the Flameshot ready and you can run the software: ./Flameshot-*-x86_64.AppImage This will create an icon in your system tray area. (usually in the bottom-right ot top-right of the screen). You can now either: 6.1 click on the tray icon and select \"Take screenshot\" 6.2 open terminal and use the following to run the application: ./Flameshot-*-x86_64.AppImage gui Snap Flameshot is not currently on snap, but when it gets available, you can install Flameshot through: snap install flameshot to update the snap applications on your computer, you should run snap refresh . Flatpak Flameshot is not currently on Flathub, but it will be there soon and the information here will be updated accordingly. For now you can install the Flatpak from the github release: flatpak install https://github.com/flameshot-org/flameshot/releases/download/v0.8.0/org.flameshot.flameshot_0.8.0_x86_64.flatpak and for runing it you should do flatpak run org.flameshot.flameshot Compilation \u00b6 The compilation requires Qt version 5.3 or higher and GCC 4.9.2 or higher . Debian/Ubuntu \u00b6 Compilation Dependencies: apt install git g++ build-essential qt5-qmake qt5-default qttools5-dev-tools Compilation: run qmake && make in the main directory. Fedora \u00b6 Compilation Dependencies: dnf install qt5-devel gcc-c++ git qt5-qtbase-devel qt5-linguist Compilation: run qmake-qt5 && make in the main directory. Arch \u00b6 Compilation Dependencies: pacman -S git qt5-base base-devel qt5-tools Compilation: run qmake && make in the main directory. Install \u00b6 Simply use make install with privileges. Packaging \u00b6 In order to generate the makefile installing in /usr instead of in /usr/local you can use the packaging option to generate the proper makefile ( qmake CONFIG+=packaging instead of just qmake ). If you want to install in a custom directory you can define the BASEDIR variable. Example : You want to install Flameshot in ~/myBuilds/test. You would execute the following to do so: qmake CONFIG+=packaging BASEDIR=~/myBuilds/test && make install Runtime Dependencies \u00b6 Debian : libqt5dbus5, libqt5network5, libqt5core5a, libqt5widgets5, libqt5gui5 Optional: openssl, ca-certificates Fedora : qt5-qtbase Optional: openssl, ca-certificates Arch : qt5-base Optional: openssl, ca-certificates Issue reporting \u00b6 To report a bug or suggest a new feature, you can go to GitHub issues page and use the searchbox in the middle of the page to see if anyone else have already posted something similar. Sometimes you will find a quick solution just by reading the threads. In case of feature request, if you find someone with similar idea, just give that a thumbs-up to increase its priority/importance. In case you didn't find similar issue, create a new issue and explain in details what the issue is. If you can, add pictures or video recordings to clarify the situation. For bug reports, make sure to also visit issue reporting page in which we have explained how to get the information we need in each bug report.","title":"Getting Started"},{"location":"getting-started/#installation","text":"There are packages available for a few distros: - Arch + Snapshot also available via AUR: flameshot-git . - Debian 10+ : apt install flameshot - Ubuntu 18.04+ : apt install flameshot - Fedora: dnf install flameshot - openSUSE - Void Linux : xbps-install flameshot - Docker - Solus : eopkg install flameshot In addition, we also have continuous integration, it currently provides the following package: - Debian8 (jessie) - Debian9 (stretch) - Ubuntu16.04 (xenial) - Ubuntu17.10 (artful) - Fedora26 - Fedora27 General packages(AppImage, snap, and Flatpak): they can run on common Linux-based operating systems, such as RHEL, CentOS, openSUSE, SLED, Ubuntu, Fedora, debian and derivatives. AppImage You can always use the AppImage as it is distro agnostic: Naviaget to the folder you would like to store the software (the following is a suggestion): mkdir -p ~/Applications/Flameshot cd ~/Applications/Flameshot Delete older versions of Flameshot AppImage: rm Flameshot-*-x86_64.AppImage Download the latest AppImage 2.1. Get it from Release page OR 2.2. use the following to automatically download the latest. sh curl -O -J -L $(curl -s https://api.github.com/repos/flameshot-org/flameshot/releases/latest \\ | grep -Po 'https://github.com/flameshot-org/flameshot/releases/download/[^}]*\\.AppImage' \\ | uniq) Set it to executable: chmod +x Flameshot-*-x86_64.AppImage Now you have the Flameshot ready and you can run the software: ./Flameshot-*-x86_64.AppImage This will create an icon in your system tray area. (usually in the bottom-right ot top-right of the screen). You can now either: 6.1 click on the tray icon and select \"Take screenshot\" 6.2 open terminal and use the following to run the application: ./Flameshot-*-x86_64.AppImage gui Snap Flameshot is not currently on snap, but when it gets available, you can install Flameshot through: snap install flameshot to update the snap applications on your computer, you should run snap refresh . Flatpak Flameshot is not currently on Flathub, but it will be there soon and the information here will be updated accordingly. For now you can install the Flatpak from the github release: flatpak install https://github.com/flameshot-org/flameshot/releases/download/v0.8.0/org.flameshot.flameshot_0.8.0_x86_64.flatpak and for runing it you should do flatpak run org.flameshot.flameshot","title":"Installation"},{"location":"getting-started/#compilation","text":"The compilation requires Qt version 5.3 or higher and GCC 4.9.2 or higher .","title":"Compilation"},{"location":"getting-started/#debianubuntu","text":"Compilation Dependencies: apt install git g++ build-essential qt5-qmake qt5-default qttools5-dev-tools Compilation: run qmake && make in the main directory.","title":"Debian/Ubuntu"},{"location":"getting-started/#fedora","text":"Compilation Dependencies: dnf install qt5-devel gcc-c++ git qt5-qtbase-devel qt5-linguist Compilation: run qmake-qt5 && make in the main directory.","title":"Fedora"},{"location":"getting-started/#arch","text":"Compilation Dependencies: pacman -S git qt5-base base-devel qt5-tools Compilation: run qmake && make in the main directory.","title":"Arch"},{"location":"getting-started/#install","text":"Simply use make install with privileges.","title":"Install"},{"location":"getting-started/#packaging","text":"In order to generate the makefile installing in /usr instead of in /usr/local you can use the packaging option to generate the proper makefile ( qmake CONFIG+=packaging instead of just qmake ). If you want to install in a custom directory you can define the BASEDIR variable. Example : You want to install Flameshot in ~/myBuilds/test. You would execute the following to do so: qmake CONFIG+=packaging BASEDIR=~/myBuilds/test && make install","title":"Packaging"},{"location":"getting-started/#runtime-dependencies","text":"Debian : libqt5dbus5, libqt5network5, libqt5core5a, libqt5widgets5, libqt5gui5 Optional: openssl, ca-certificates Fedora : qt5-qtbase Optional: openssl, ca-certificates Arch : qt5-base Optional: openssl, ca-certificates","title":"Runtime Dependencies"},{"location":"getting-started/#issue-reporting","text":"To report a bug or suggest a new feature, you can go to GitHub issues page and use the searchbox in the middle of the page to see if anyone else have already posted something similar. Sometimes you will find a quick solution just by reading the threads. In case of feature request, if you find someone with similar idea, just give that a thumbs-up to increase its priority/importance. In case you didn't find similar issue, create a new issue and explain in details what the issue is. If you can, add pictures or video recordings to clarify the situation. For bug reports, make sure to also visit issue reporting page in which we have explained how to get the information we need in each bug report.","title":"Issue reporting"},{"location":"issue-reporting/","text":"In this page we explain how to properly extract your system information so that you can report it in a GitHub issue Here we discuss commands to be used in a GNU/Linux system. We migh later add similar information for Windows users. Flameshot version \u00b6 flameshot --version The output would look like: Flameshot v0.8.3 Compiled with Qt 5.15.0 Display Server Protocol \u00b6 Basically what we want to know is if you are using X or Wayland. If you want to know what they are and what they do You can read this article . You can use the following command to determin which one do you use: loginctl show-session $( loginctl show-user $( whoami ) -p Display --value ) -p Type --value Monitor(s) information \u00b6 You can get lots of information about the monitors, but we are interested to see only those that are active and in use. You can use xrandr command to get the monitor information and here we presenta short version and a long version. The long version is more useful since it also contains information about the orientation of the monitor. Short format: xrandr --listactivemonitors The output would look like: Monitors: 3 0: +*HDMI-1-1 1920/509x1080/286+1080+0 HDMI-1-1 1: +HDMI-0 1080/509x1920/286+3000+0 HDMI-0 2: +HDMI-1 1080/509x1920/286+0+80 HDMI-1 Long format: xrandr | grep -v \" disconnected \" The output would look like: Screen 0: minimum 8 x 8, current 4080 x 2000, maximum 32767 x 32767 HDMI-0 connected 1080x1920+3000+0 left (normal left inverted right x axis y axis) 509mm x 286mm 1920x1080 60.00*+ 59.94 50.00 60.00 50.04 1680x1050 59.95 1440x900 74.98 59.89 1280x1024 75.02 60.02 1280x800 59.81 1280x720 60.00 59.94 50.00 1152x864 75.00 1024x768 75.03 70.07 60.00 800x600 75.00 72.19 60.32 720x576 50.00 720x480 59.94 640x480 75.00 72.81 59.93 59.94 HDMI-1 connected 1080x1920+0+80 left (normal left inverted right x axis y axis) 509mm x 286mm 1920x1080 60.00*+ 59.94 50.00 60.00 50.04 1680x1050 59.95 1440x900 74.98 59.89 1280x1024 75.02 60.02 1280x800 59.81 1280x720 60.00 59.94 50.00 1152x864 75.00 1024x768 75.03 70.07 60.00 800x600 75.00 72.19 60.32 720x576 50.00 720x480 59.94 640x480 75.00 72.81 59.93 59.94 HDMI-1-1 connected primary 1920x1080+1080+0 (normal left inverted right x axis y axis) 509mm x 286mm 1920x1080 60.00*+ 1680x1050 59.88 1600x900 60.00 1280x1024 60.02 1440x900 59.90 1280x720 60.00 1024x768 60.00 800x600 60.32 640x480 59.94 720x400 70.08 1920x1080 (0x1bf) 148.500MHz +HSync +VSync h: width 1920 start 2008 end 2052 total 2200 skew 0 clock 67.50KHz v: height 1080 start 1084 end 1089 total 1125 clock 60.00Hz 1280x1024 (0x1c8) 108.000MHz +HSync +VSync h: width 1280 start 1328 end 1440 total 1688 skew 0 clock 63.98KHz v: height 1024 start 1025 end 1028 total 1066 clock 60.02Hz 1280x720 (0x1ca) 74.250MHz +HSync +VSync h: width 1280 start 1390 end 1430 total 1650 skew 0 clock 45.00KHz v: height 720 start 725 end 730 total 750 clock 60.00Hz 1024x768 (0x1d0) 65.000MHz -HSync -VSync h: width 1024 start 1048 end 1184 total 1344 skew 0 clock 48.36KHz v: height 768 start 771 end 777 total 806 clock 60.00Hz 800x600 (0x1d3) 40.000MHz +HSync +VSync h: width 800 start 840 end 968 total 1056 skew 0 clock 37.88KHz v: height 600 start 601 end 605 total 628 clock 60.32Hz 640x480 (0x1d9) 25.175MHz -HSync -VSync h: width 640 start 656 end 752 total 800 skew 0 clock 31.47KHz v: height 480 start 490 end 492 total 525 clock 59.94Hz Graphics card information \u00b6 For graphics card there are also many ways to get the information but the most two common routes are: update-pciids # you might need to run this with sudo lspci | grep -i 'vga\\|3d\\|2d' The output would look like: 00:02.0 VGA compatible controller: Intel Corporation Xeon E3-1200 v3/4th Gen Core Processor Integrated Graphics Controller (rev 06) 01:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) and # in some systems lshw is not installed by default lshw -class display The output would look like: WARNING: you should run this program as super-user. *-display description: VGA compatible controller product: GP106 [GeForce GTX 1060 6GB] vendor: NVIDIA Corporation physical id: 0 bus info: pci@0000:01:00.0 version: a1 width: 64 bits clock: 33MHz capabilities: vga_controller bus_master cap_list rom configuration: driver=nvidia latency=0 resources: irq:35 memory:d2000000-d2ffffff memory:c0000000-cfffffff memory:d0000000-d1ffffff ioport:e000(size=128) memory:c0000-dffff *-display description: VGA compatible controller product: Xeon E3-1200 v3/4th Gen Core Processor Integrated Graphics Controller vendor: Intel Corporation physical id: 2 bus info: pci@0000:00:02.0 version: 06 width: 64 bits clock: 33MHz capabilities: vga_controller bus_master cap_list configuration: driver=i915 latency=0 resources: irq:32 memory:d3400000-d37fffff memory:b0000000-bfffffff ioport:f000(size=64) WARNING: output may be incomplete or inaccurate, you should run this program as super-user. Operating system information \u00b6 There are many ways to get such information. Perhaps the easiest one is via the following command: uname -a which give an out put similar to the following: Linux MyComputer 5.8.11-1-MANJARO #1 SMP PREEMPT Wed Sep 23 14:35:40 UTC 2020 x86_64 GNU/Linux","title":"Issue Reporting"},{"location":"issue-reporting/#flameshot-version","text":"flameshot --version The output would look like: Flameshot v0.8.3 Compiled with Qt 5.15.0","title":"Flameshot version"},{"location":"issue-reporting/#display-server-protocol","text":"Basically what we want to know is if you are using X or Wayland. If you want to know what they are and what they do You can read this article . You can use the following command to determin which one do you use: loginctl show-session $( loginctl show-user $( whoami ) -p Display --value ) -p Type --value","title":"Display Server Protocol"},{"location":"issue-reporting/#monitors-information","text":"You can get lots of information about the monitors, but we are interested to see only those that are active and in use. You can use xrandr command to get the monitor information and here we presenta short version and a long version. The long version is more useful since it also contains information about the orientation of the monitor. Short format: xrandr --listactivemonitors The output would look like: Monitors: 3 0: +*HDMI-1-1 1920/509x1080/286+1080+0 HDMI-1-1 1: +HDMI-0 1080/509x1920/286+3000+0 HDMI-0 2: +HDMI-1 1080/509x1920/286+0+80 HDMI-1 Long format: xrandr | grep -v \" disconnected \" The output would look like: Screen 0: minimum 8 x 8, current 4080 x 2000, maximum 32767 x 32767 HDMI-0 connected 1080x1920+3000+0 left (normal left inverted right x axis y axis) 509mm x 286mm 1920x1080 60.00*+ 59.94 50.00 60.00 50.04 1680x1050 59.95 1440x900 74.98 59.89 1280x1024 75.02 60.02 1280x800 59.81 1280x720 60.00 59.94 50.00 1152x864 75.00 1024x768 75.03 70.07 60.00 800x600 75.00 72.19 60.32 720x576 50.00 720x480 59.94 640x480 75.00 72.81 59.93 59.94 HDMI-1 connected 1080x1920+0+80 left (normal left inverted right x axis y axis) 509mm x 286mm 1920x1080 60.00*+ 59.94 50.00 60.00 50.04 1680x1050 59.95 1440x900 74.98 59.89 1280x1024 75.02 60.02 1280x800 59.81 1280x720 60.00 59.94 50.00 1152x864 75.00 1024x768 75.03 70.07 60.00 800x600 75.00 72.19 60.32 720x576 50.00 720x480 59.94 640x480 75.00 72.81 59.93 59.94 HDMI-1-1 connected primary 1920x1080+1080+0 (normal left inverted right x axis y axis) 509mm x 286mm 1920x1080 60.00*+ 1680x1050 59.88 1600x900 60.00 1280x1024 60.02 1440x900 59.90 1280x720 60.00 1024x768 60.00 800x600 60.32 640x480 59.94 720x400 70.08 1920x1080 (0x1bf) 148.500MHz +HSync +VSync h: width 1920 start 2008 end 2052 total 2200 skew 0 clock 67.50KHz v: height 1080 start 1084 end 1089 total 1125 clock 60.00Hz 1280x1024 (0x1c8) 108.000MHz +HSync +VSync h: width 1280 start 1328 end 1440 total 1688 skew 0 clock 63.98KHz v: height 1024 start 1025 end 1028 total 1066 clock 60.02Hz 1280x720 (0x1ca) 74.250MHz +HSync +VSync h: width 1280 start 1390 end 1430 total 1650 skew 0 clock 45.00KHz v: height 720 start 725 end 730 total 750 clock 60.00Hz 1024x768 (0x1d0) 65.000MHz -HSync -VSync h: width 1024 start 1048 end 1184 total 1344 skew 0 clock 48.36KHz v: height 768 start 771 end 777 total 806 clock 60.00Hz 800x600 (0x1d3) 40.000MHz +HSync +VSync h: width 800 start 840 end 968 total 1056 skew 0 clock 37.88KHz v: height 600 start 601 end 605 total 628 clock 60.32Hz 640x480 (0x1d9) 25.175MHz -HSync -VSync h: width 640 start 656 end 752 total 800 skew 0 clock 31.47KHz v: height 480 start 490 end 492 total 525 clock 59.94Hz","title":"Monitor(s) information"},{"location":"issue-reporting/#graphics-card-information","text":"For graphics card there are also many ways to get the information but the most two common routes are: update-pciids # you might need to run this with sudo lspci | grep -i 'vga\\|3d\\|2d' The output would look like: 00:02.0 VGA compatible controller: Intel Corporation Xeon E3-1200 v3/4th Gen Core Processor Integrated Graphics Controller (rev 06) 01:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) and # in some systems lshw is not installed by default lshw -class display The output would look like: WARNING: you should run this program as super-user. *-display description: VGA compatible controller product: GP106 [GeForce GTX 1060 6GB] vendor: NVIDIA Corporation physical id: 0 bus info: pci@0000:01:00.0 version: a1 width: 64 bits clock: 33MHz capabilities: vga_controller bus_master cap_list rom configuration: driver=nvidia latency=0 resources: irq:35 memory:d2000000-d2ffffff memory:c0000000-cfffffff memory:d0000000-d1ffffff ioport:e000(size=128) memory:c0000-dffff *-display description: VGA compatible controller product: Xeon E3-1200 v3/4th Gen Core Processor Integrated Graphics Controller vendor: Intel Corporation physical id: 2 bus info: pci@0000:00:02.0 version: 06 width: 64 bits clock: 33MHz capabilities: vga_controller bus_master cap_list configuration: driver=i915 latency=0 resources: irq:32 memory:d3400000-d37fffff memory:b0000000-bfffffff ioport:f000(size=64) WARNING: output may be incomplete or inaccurate, you should run this program as super-user.","title":"Graphics card information"},{"location":"issue-reporting/#operating-system-information","text":"There are many ways to get such information. Perhaps the easiest one is via the following command: uname -a which give an out put similar to the following: Linux MyComputer 5.8.11-1-MANJARO #1 SMP PREEMPT Wed Sep 23 14:35:40 UTC 2020 x86_64 GNU/Linux","title":"Operating system information"},{"location":"key-bindings/","text":"Keyboard shortcuts \u00b6 Local \u00b6 These shortcuts are available in GUI mode: Keys Description \u2190 , \u2193 , \u2191 , \u2192 Move selection 1px Shift + \u2190 , \u2193 , \u2191 , \u2192 Resize selection 1px Esc Quit capture Ctrl + C Copy to clipboard Ctrl + S Save selection as a file Ctrl + Z Undo the last modification Right Click Show color picker Mouse Wheel Change the tool's thickness Shift + drag a handler of the selection area: mirror redimension in the opposite handler. Global \u00b6 If you want use Flameshot as a default screenshot utility, chances are you want to launch it using the Prt Sc key. Flameshot doesn't yet offer a fully-automated option to do so, but you can configure your system to do so. On KDE Plasma desktop \u00b6 To make configuration easier, there's a file in the repository that more or less automates this process. This file will assign the following keys to the following actions by default: Keys Description Prt Sc Start the Flameshot screenshot tool and take a screenshot Ctrl + Prt Sc Wait for 3 seconds, then start the Flameshot screenshot tool and take a screenshot Shift + Prt Sc Take a full-screen (all monitors) screenshot and save it Ctrl + Shift + Prt Sc Take a full-screen (all monitors) screenshot and copy it to the clipboard If you don't like the defaults, you can change them manually later. Steps for using the configuration: The configuration file configures shortcuts so that Flameshot automatically saves (without opening the save dialog) screenshots to ~/Pictures/Screenshots folder. Make sure you have that folder by running the following command: mkdir -p ~/Pictures/Screenshots (If you don't like the default location, you can skip this step and configure your preferred directory later.) Download the configuration file: cd ~/Desktop; wget https://raw.githubusercontent.com/flameshot-org/flameshot/master/docs/shortcuts-config/flameshot-shortcuts-kde Go to System Settings \u2192 Shortcuts \u2192 Custom Shortcuts . If there's one, you'll need to disable an entry for Spectacle, the default KDE screenshot utility first because its shortcuts might collide with Flameshot's ones; so, just uncheck the Spectacle entry. Click Edit \u2192 Import... , navigate to the Desktop folder (or wherever you saved the configuration file) and open the configuration file. Now the Flameshot entry should appear in the list. Click Apply to apply the changes. If you want to change the defaults, you can expand the entry, select the appropriate action and modify it as you wish; the process is pretty mush self-explanatory. On Ubuntu and other Gnome based distros \u00b6 You can easily configure your 'print' keyboard shortcut to be assigned to Flameshot. Below an example to open Flameshot in GUI mode: Open Settings \u2192 Devices \u2192 Keyboard \u2192 Shortcuts . Search for 'print', and unbind the screen capture function by selecting it, and clicking backspace . Scroll down and click on the '+'. On 'Name', name it 'Flameshot' or 'PrintScreen'. Define the command as 'flameshot gui'. Select 'Define shortcut...'and click your keyboard Prt Sc key. Now you can use your default keyboard key to launch Flameshot. For defining multiple shortcuts you can repeat the process above, and just change the command. Some examples of commands are: # Capture a region using the GUI, and have it automatically saved to your pictures folder when clicking the save button in GUI flameshot gui -p /home/user/Pictures # Capture the active monitor and save it automatically to your pictures folder flameshot screen -p /home/user/Pictures # Capture the full desktop (all monitors) and save it automatically to your pictures folder flameshot full -p /home/user/Pictures","title":"Key Bindings"},{"location":"key-bindings/#keyboard-shortcuts","text":"","title":"Keyboard shortcuts"},{"location":"key-bindings/#local","text":"These shortcuts are available in GUI mode: Keys Description \u2190 , \u2193 , \u2191 , \u2192 Move selection 1px Shift + \u2190 , \u2193 , \u2191 , \u2192 Resize selection 1px Esc Quit capture Ctrl + C Copy to clipboard Ctrl + S Save selection as a file Ctrl + Z Undo the last modification Right Click Show color picker Mouse Wheel Change the tool's thickness Shift + drag a handler of the selection area: mirror redimension in the opposite handler.","title":"Local"},{"location":"key-bindings/#global","text":"If you want use Flameshot as a default screenshot utility, chances are you want to launch it using the Prt Sc key. Flameshot doesn't yet offer a fully-automated option to do so, but you can configure your system to do so.","title":"Global"},{"location":"key-bindings/#on-kde-plasma-desktop","text":"To make configuration easier, there's a file in the repository that more or less automates this process. This file will assign the following keys to the following actions by default: Keys Description Prt Sc Start the Flameshot screenshot tool and take a screenshot Ctrl + Prt Sc Wait for 3 seconds, then start the Flameshot screenshot tool and take a screenshot Shift + Prt Sc Take a full-screen (all monitors) screenshot and save it Ctrl + Shift + Prt Sc Take a full-screen (all monitors) screenshot and copy it to the clipboard If you don't like the defaults, you can change them manually later. Steps for using the configuration: The configuration file configures shortcuts so that Flameshot automatically saves (without opening the save dialog) screenshots to ~/Pictures/Screenshots folder. Make sure you have that folder by running the following command: mkdir -p ~/Pictures/Screenshots (If you don't like the default location, you can skip this step and configure your preferred directory later.) Download the configuration file: cd ~/Desktop; wget https://raw.githubusercontent.com/flameshot-org/flameshot/master/docs/shortcuts-config/flameshot-shortcuts-kde Go to System Settings \u2192 Shortcuts \u2192 Custom Shortcuts . If there's one, you'll need to disable an entry for Spectacle, the default KDE screenshot utility first because its shortcuts might collide with Flameshot's ones; so, just uncheck the Spectacle entry. Click Edit \u2192 Import... , navigate to the Desktop folder (or wherever you saved the configuration file) and open the configuration file. Now the Flameshot entry should appear in the list. Click Apply to apply the changes. If you want to change the defaults, you can expand the entry, select the appropriate action and modify it as you wish; the process is pretty mush self-explanatory.","title":"On KDE Plasma desktop"},{"location":"key-bindings/#on-ubuntu-and-other-gnome-based-distros","text":"You can easily configure your 'print' keyboard shortcut to be assigned to Flameshot. Below an example to open Flameshot in GUI mode: Open Settings \u2192 Devices \u2192 Keyboard \u2192 Shortcuts . Search for 'print', and unbind the screen capture function by selecting it, and clicking backspace . Scroll down and click on the '+'. On 'Name', name it 'Flameshot' or 'PrintScreen'. Define the command as 'flameshot gui'. Select 'Define shortcut...'and click your keyboard Prt Sc key. Now you can use your default keyboard key to launch Flameshot. For defining multiple shortcuts you can repeat the process above, and just change the command. Some examples of commands are: # Capture a region using the GUI, and have it automatically saved to your pictures folder when clicking the save button in GUI flameshot gui -p /home/user/Pictures # Capture the active monitor and save it automatically to your pictures folder flameshot screen -p /home/user/Pictures # Capture the full desktop (all monitors) and save it automatically to your pictures folder flameshot full -p /home/user/Pictures","title":"On Ubuntu and other Gnome based distros"},{"location":"translation/","text":"Translation \u00b6 Flameshot supports internationalization of language. You can help translate Flameshot into your language or improve the existing translations. Please see Flameshot/translation-instruction for instructions. You can also help us improve the documentation of Flameshot. Just pull requests at this repo and the changes will be synced to https://flameshot.org \u3002 If you need any help, feel free to submit issues .","title":"Translation"},{"location":"translation/#translation","text":"Flameshot supports internationalization of language. You can help translate Flameshot into your language or improve the existing translations. Please see Flameshot/translation-instruction for instructions. You can also help us improve the documentation of Flameshot. Just pull requests at this repo and the changes will be synced to https://flameshot.org \u3002 If you need any help, feel free to submit issues .","title":"Translation"},{"location":"troubleshooting/","text":"Linux \u00b6 In System tray area, flameshot appears duplicate icons/indicator \u00b6 It is currently found in Ubuntu 14.04 and 16.04 Unity environment, such problems occur. This problem does not occur with Ubuntu 17.10 Unity. #92","title":"Troubleshooting"},{"location":"troubleshooting/#linux","text":"","title":"Linux"},{"location":"troubleshooting/#in-system-tray-area-flameshot-appears-duplicate-iconsindicator","text":"It is currently found in Ubuntu 14.04 and 16.04 Unity environment, such problems occur. This problem does not occur with Ubuntu 17.10 Unity. #92","title":"In System tray area, flameshot appears duplicate icons/indicator"}]}